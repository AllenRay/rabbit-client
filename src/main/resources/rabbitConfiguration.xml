<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <context:annotation-config></context:annotation-config>

    <context:component-scan base-package="cn.rabbit"/>

    <context:property-placeholder location="classpath:config.properties" system-properties-mode="OVERRIDE"/>

    <bean id="connectionFactory" class="cn.rabbit.ChannelFactory" scope="singleton">
        <property name="address" value="172.21.107.206,172.21.107.128,172.21.107.129"/>
        <property name="userName" value="oneplus_admin"/>
        <property name="password" value="oneplus123ABC"/>
        <property name="virtualHost" value="/oneplus"/>
    </bean>

    <bean id="rabbitTemplate" class="cn.rabbit.RabbitTemplate">
        <property name="channelFactory" ref="connectionFactory"/>
         <property name="messageConsumedCountCache" ref="messageConsumedCountCache"/>
    </bean>

    <bean class="cn.rabbit.QueueDeclare" id="queueDeclare1">
        <property name="name" value="oneplus-test2-1"/>
        <property name="channelFactory" ref="connectionFactory"/>
    </bean>

    <bean class="cn.rabbit.QueueDeclare" id="queueDeclare2">
        <property name="name" value="oneplus-test2-2"/>
        <property name="channelFactory" ref="connectionFactory"/>
    </bean>

    <bean class="cn.rabbit.QueueDeclare" id="queueDeclare3">
        <property name="name" value="oneplus-test2-3"/>
        <property name="channelFactory" ref="connectionFactory"/>
    </bean>

    <bean class="cn.rabbit.QueueDeclare" id="queueDeclare4">
        <property name="name" value="oneplus-test2-4"/>
        <property name="channelFactory" ref="connectionFactory"/>
    </bean>

    <bean class="cn.rabbit.QueueDeclare" id="queueDeclare5">
        <property name="name" value="oneplus-test2-6"/>
        <property name="channelFactory" ref="connectionFactory"/>
    </bean>

    <bean class="cn.rabbit.QueueDeclare" id="queueDeclare7">
        <property name="name" value="oneplus-test2-7"/>
        <property name="channelFactory" ref="connectionFactory"/>
    </bean>

    <bean class="cn.rabbit.ExchangeDeclare" id="exchangeDeclare">
        <property name="name" value="test-1"/>
        <property name="type" value="fanout"/>
        <property name="channelFactory" ref="connectionFactory"/>
        <property name="queueBinds">
            <list>
                <bean class="cn.rabbit.QueueBind">
                    <property name="queue" value="oneplus-test2-1"/>
                </bean>
                <bean class="cn.rabbit.QueueBind">
                    <property name="queue" value="oneplus-test2-2"/>
                </bean>
                <bean class="cn.rabbit.QueueBind">
                    <property name="queue" value="oneplus-test2-3"/>
                </bean>
                <bean class="cn.rabbit.QueueBind">
                    <property name="queue" value="oneplus-test2-4"/>
                </bean>
                <bean class="cn.rabbit.QueueBind">
                    <property name="queue" value="oneplus-test2-6"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="exchangeDeclare1" class="cn.rabbit.ExchangeDeclare">
        <property name="name" value="test-2"/>
        <property name="type" value="direct"/>
        <property name="channelFactory" ref="connectionFactory"/>
        <property name="queueBinds">
            <list>
                <bean class="cn.rabbit.QueueBind">
                  <property name="queue" value="oneplus-test2-7"/>
                  <property name="routingKey" value="test-2"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="redisCache" class="com.oneplus.common.utils.RedisCache">
        <property name="isEnable" value="${redis.isEnable}"></property>
    </bean>

    <!-- 主从做负载均衡 -->
    <bean id="jedisShardInfoMaster" class="redis.clients.jedis.JedisShardInfo">
        <constructor-arg index="0" value="${redis.host.master}" />
        <constructor-arg index="1" value="${redis.port.master}" type="int" />
    </bean>

    <bean id="jedisShardInfoSlave0" class="redis.clients.jedis.JedisShardInfo">
        <constructor-arg index="0" value="${redis.host.slave0}" />
        <constructor-arg index="1" value="${redis.port.slave0}" type="int" />
    </bean>

    <bean id="jedisShardInfoSlave1" class="redis.clients.jedis.JedisShardInfo">
        <constructor-arg index="0" value="${redis.host.slave1}" />
        <constructor-arg index="1" value="${redis.port.slave1}" type="int" />
    </bean>

    <bean id="jedisShardInfoSlave2" class="redis.clients.jedis.JedisShardInfo">
        <constructor-arg index="0" value="${redis.host.slave2}" />
        <constructor-arg index="1" value="${redis.port.slave2}" type="int" />
    </bean>

    <!-- 写操作只能在master上执行 -->
    <bean id="writeJedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${redis.host.master}" />
        <constructor-arg index="2" value="${redis.port.master}" type="int" />
    </bean>

    <!-- 读操作可在master && slave负载均衡 -->
    <bean id="readShardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <ref bean="jedisShardInfoMaster" />
                <ref bean="jedisShardInfoSlave0"/>
                <ref bean="jedisShardInfoSlave1"/>
                <ref bean="jedisShardInfoSlave2"/>
            </list>
        </constructor-arg>
    </bean>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive"     value="${redis.pool.maxActive}" />
        <property name="maxIdle"       value="${redis.pool.maxIdle}" />
        <property name="maxWait"       value="${redis.pool.maxWait}" />
        <property name="testOnBorrow"  value="${redis.pool.testOnBorrow}" />
        <property name="testOnReturn"  value="${redis.pool.testOnReturn}" />
    </bean>

    <bean id="messageConsumedCountCache" class="cn.rabbit.cache.impl.RedisMessageConsumedCountCache">
        <property name="redisCache" ref="redisCache"/>
    </bean>


</beans>
